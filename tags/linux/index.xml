<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on JokemeBlog</title>
    <link>https://jokeme.top/tags/linux/</link>
    <description>Recent content in Linux on JokemeBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Dec 2021 17:28:59 +0800</lastBuildDate><atom:link href="https://jokeme.top/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>webdav搭建</title>
      <link>https://jokeme.top/p/configure_webdav/</link>
      <pubDate>Thu, 16 Dec 2021 17:28:59 +0800</pubDate>
      
      <guid>https://jokeme.top/p/configure_webdav/</guid>
      <description>webdav搭建 最近闲来无事,想利用一下自己的公网IP做点别的有意思的事,因为之前搭建的网盘都统统没有用了,可能是用不来吧,还是在用的samba.
就突然想到了为什么不搭建一个webdav呢！
因为不打算用apache或者nginx来搭建，就去GitHub找了一下，还真的有一个不错的项目，使用Golang。那就开干吧。
1. 准备工作 首先需要下载这个webdav，我只贴了项目地址，因为可能到时候这个项目又更新了。
wget https://github.com/hacdias/webdav/releases/download/v4.1.1/linux-amd64-webdav.tar.gz mkdir ~/.ENV/webdav	# ~/.ENV 是我个人习惯放的地方 mv linux-amd64-webdav.tar.gz ~/.ENV/webdav tar -zxvf linux-amd64-webdav.tar.gz &amp;amp;&amp;amp; rm linux-amd64-webdav.tar.gz touch config.yml #config.{json, toml, yaml, yml} 都可以，而且它会在 ./ &amp;amp; /etc/webdav/下查找文件 2. 配置文件 然后就是配置文件的内容了，我的是yaml格式的，大家可以参考一下。
address:0.0.0.0port:8090auth:truetls:falseprefix:/users:- username:usernamepassword:passwordscope:/home/username/xxx下面的这个是官网给的详细介绍，比较全但是也有很多我用不到的配置。
scope:.modify:truerules:[]# CORS configurationcors:enabled:truecredentials:trueallowed_headers:- Depthallowed_hosts:- http://localhost:8080allowed_methods:- GETexposed_headers:- Content-Length- Content-Rangeusers:- username:adminpassword:adminscope:/a/different/path- username:encryptedpassword:&amp;#34;{bcrypt}$2y$10$zEP6oofmXFeHaeMfBNLnP.DO8m.H.Mwhd24/TOX2MWLxAExXi4qgi&amp;#34;- username:&amp;#34;{env}ENV_USERNAME&amp;#34;password:&amp;#34;{env}ENV_PASSWORD&amp;#34;- username:basicpassword:basicmodify:falserules:- regex:falseallow:falsepath:/some/file- path:/public/access/modify:true3. 开机自启 这一步需要编写service文件 webdav.service.example，官网给了栗子了，我还是贴一下自己的吧。
[Unit] Description=WebDAV server After=network.target [Service] Type=simple User=root ExecStart=/home/frelon/.ENV/webdav/webdav --config /home/frelon/.ENV/webdav/config.yml Restart=on-failure [Install] WantedBy=multi-user.target sudo systemctl daemon-reload sudo systemctl start webdav sudo systemctl enable webdav 然后就可以正常使用了，但是如果你觉得端口不如意，咱可以用nginx代理到80。</description>
    </item>
    
  </channel>
</rss>
