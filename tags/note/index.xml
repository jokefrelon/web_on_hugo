<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on JokemeBlog</title>
    <link>https://jokeme.top/tags/note/</link>
    <description>Recent content in Note on JokemeBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jokeme.top/tags/note/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hackintosh Laptop 常见快捷键</title>
      <link>https://jokeme.top/p/hackintosh_laptop_hotkey/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/hackintosh_laptop_hotkey/</guid>
      <description>Hackintosh Laptop 常见快捷键 一般来说可以macOS和Windows对应键位参考下面的对照表即可
   macOS Windows     Command win   Option alt   Control ctrl    所有的通用快捷键加粗标记
1. 系统快捷键: 强制退出：win + alt + esc
 对标Windows的任务管理器，但是简化到了只有强制退出功能
 切换桌面：ctrl + ◀︎ / ▶︎
切换任务：win + tab
打开finder：win + t
连接samba：win + k
2. 常见通用快捷键： 全选：win + a
复制字符：win + c
保存：win + s
粘贴字符：win + v
剪切字符：win + x
撤销操作：win + z</description>
    </item>
    
    <item>
      <title>一个有意思的shell变量问题</title>
      <link>https://jokeme.top/p/funny_space_in_shell_script/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/funny_space_in_shell_script/</guid>
      <description>一个有意思的shell变量问题 今天在上班时遇到了一个批量解压zip的需求，由于几十个压缩包的名称一样，chrome下载下来以后就自动给加了编号。并且解压后的文件名也是一样的，只不过里面的文件不一样。
虽然在Windows下有批量解压缩工具，但是我没有安装。我电脑上只有7zip。既然是批量处理文件，那我就想到了用shell来做这件事。
首先！我遇到的问题就是！文件名里面有空格，类似**&amp;ldquo;abc xyz.zip&amp;rdquo;**一个文件名被shell捕获成变量以后，在for循环里面会被错误的解析成两个不同的变量，这就导致了代码逻辑上没有问题。你不亲自调试一下，就不知道为什么会报错。
为此我百度了良久，找到了以下两种解决方案
1. 解决方案一：修改IFS 我百思不得其解，为什么这么多一毛一样的文章都推荐使用IFS，而且只修改了IFS，而且用完还没有给修改回来。这不是给自己挖坑吗
IFS的默认值为空白字符（换行符、制表符或者空格）。如果你手动的修改它为别的字符，那后续的代码也就会以该字符为定界符。只能说是简单粗暴，贼鸡儿好用！
2. 解决方案二：修改文件名 一开始我看到这种方案还很疑惑！我尼玛要是有那修改文件名的功夫我还写代码干啥，哈哈哈哈。然后我看了一下思路，嗯！还是有点道理的。原文见脚本之家。
大概思路我就放在下面的代码里面讲解吧！
allzip=`ls | grep zip | sed &amp;#39;s/ (/(/g&amp;#39;`	#先用sed把&amp;#39; (&amp;#39;替换成&amp;#39;(&amp;#39;保存到list里面 echo $allzip	#echo一下,让自己放心一店 for zip in $allzip do filen=`echo $zip | sed &amp;#39;s/(/ (/g&amp;#39;`	#把存起来的没有空格的变量还原成真正的有空格的文件名 mv &amp;#34;$filen&amp;#34; $zip	#拿到了真正的文件名,为了后续方便,直接把有空格的文件修改为没有空格的 unzip $zip	#顺带给它解压一下 done 好了就是这么的简单，也不用修改什么IFS。虽然有一丢丢的绕，但是也是非常容易理解的。你们也看出来了我个人是偏向于第二种方案的，因为修改IFS万一你忘记给改回去，那你下面还有字符串类分割的操作就会度过一段非常蛋疼的调试时光。</description>
    </item>
    
    <item>
      <title>Clang学习笔记</title>
      <link>https://jokeme.top/p/clang_note2/</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/clang_note2/</guid>
      <description>ClangLearn Clang 定义符号常量 在宏中定义符号常量非常简单,格式如下
#define KEYWORD &amp;#34;String&amp;#34; eg:white_check_mark:下面这句废话!啥也没有干就是替换了一句话.
#include &amp;lt;stdio.h&amp;gt;#define FRELON &amp;#34;Written By Frelon O(∩_∩)O&amp;#34; int main() { printf(&amp;#34;%s\n&amp;#34;, FRELON); return 0; } Thinking:电脑💻为什么知道字符串常量在哪里该结束呢?万一把后面的代码也 读取为字符串常量了呢?
其实==Clang==会自动在字符串常量结尾加上一个转义字符\0来表示读取结束.
Clang 数据类型 graph LR a[数据类型]--&amp;gt;b[基本类型] a[数据类型]--&amp;gt;c[指针类型] a[数据类型]--&amp;gt;e[空白类型] a[数据类型]--&amp;gt;d[构造类型] b--&amp;gt;f(整数类型:int) b--&amp;gt;g(浮点类型:float,double) b--&amp;gt;h(字符类型:char) b--&amp;gt;i(布尔类型:_Bool) d--&amp;gt;j(枚举类型) d--&amp;gt;k(数组类型) d--&amp;gt;l(结构类型) d--&amp;gt;m(联合类型) signed和unsigned的区别
一般情况下,signed都表示有正负号的区别。而unsigned表示没有负数,只有正数。
==1Byte=8bit==
Byte==比特
Clang字符串 声明字符串:char name[number];
字符串赋值:name[0]=&amp;lsquo;F&amp;rsquo;;
char Gage[10]; Gage[0] = &amp;#39;J&amp;#39;; Gage[1] = &amp;#39;a&amp;#39;; Gage[2] = &amp;#39;v&amp;#39;; Gage[3] = &amp;#39;a&amp;#39;; Gage[4] = &amp;#39;N&amp;#39;; Gage[5] = &amp;#39;o&amp;#39;; Gage[6] = &amp;#39;.</description>
    </item>
    
    <item>
      <title>记录最近捯饬Linux的收获</title>
      <link>https://jokeme.top/p/linux_reward/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/linux_reward/</guid>
      <description>记录最近捯饬Linux的收获 虽然最近在准备专升本考试吧，但是也没有认真的复习，最近还是天天玩Linux，在这里记录一下。
1. Windows Terminal设置 如果你关注IT圈的话，你一定知道微软在Github开源了新的Terminal，并且这是一个颜值高,用着爽的全新版本,支持Unicode。这些都是后话，我要说的是WSL和Terminal相关的设置。因为Terminal打开WSL默认的路径是该用户的在Windows下的家目录，而此时你就需要修改setting.json对应位置添加以下配置：&amp;quot;startingDirectory&amp;quot;: &amp;quot;//wsl$/Ubuntu-18.04/home/frelon&amp;quot;
如果你还没有用过Windows Terminal那你可以先看看这个Windows Terminal的简介
2. aria2下载 众所周知，aria2是一款非常好用的一款下载工具，并且它开源，体积小，运行效率高等。什么？你没有听说过？那你总听说过Motrix吧！什么你还没有听说过？那你一定知道PanDown吧？没错这款伟大的软件就是基于aria2。
aria2本身只是命令行工具，所以我们可以在命令行里安装它。
sudo apt install aira2 如果你只是简简单单的下载文件，那curl 和 wget aira2是没有啥大的区别的。额说到这里哈，就不得不说今天是curl的23岁生日，curl是 March 20. 1998 年发布的。没错！确实是23年前的今天！因为时差的原因，那边还是20号，咱们这边已经21号了，不是我记错了。
然后我就根据我个人的使用习惯给alias一下了，因为我不喜欢这种字母和数组夹杂的命令，遇到了都会给重命名一下方便以后自己敲命令。
alias ac=&amp;quot;aria2c&amp;quot; 首先既然是下载工具，那我为什么要用aria2？
我们先来看看aria2支持啥协议
URI, MAGNET, TORRENT_FILE, METALINK_FILE
传统的http，https，ftp，磁力。bt种子，metalink。你就说它强大不强大吧，可以在这么小体量的情况下，做这么多事情。现在你知道为什么这么多人夸赞它了吧。
现在我们来说说看Windows这边的下载巨头：迅雷。
为什么我们都瞧不起迅雷？
因为迅雷是白眼狼，喝BT的血起家，把自己养肥了。到最后迅雷却不反哺BT下载的生态圈。就这一点就足够可耻的了。
3. 获取CPU温度 echo `echo &amp;quot;scale=2; $(cat /sys/class/thermal/thermal_zone2/temp)/1000&amp;quot; | bc` °C 用Ubuntu 20的小伙伴可以直接用这条命令查看cpu温度，Ubuntu18我还没有试过，别的系统我就不得而知了。
4. awk 、sed awk 是一个文本处理命令，常用的就是查找文本内部的字符。
默认情况下awk是用空格来分割，
awk &#39;{print $1}&#39; 如果你想用特定的字符串分割,可以用 -F来指定。
awk -F/ &#39;{print $1}&#39;  sed它同样也是文本处理，用来替换文本的，最常用到的可能就是在刚安装完系统后换软件源的时候。用国内的url来替换国外的url
sed -i &#39;s/xxx/yyy/g&#39; filename 这个就是把文件内部的xxx替换为yyy。如果需要在文件行首添加字符，就可以sed -i &#39;s/^/yyy/g&#39; filename，有行首肯定是有行尾，那行尾把 ^换成$就可以了。</description>
    </item>
    
    <item>
      <title>数学思想</title>
      <link>https://jokeme.top/p/math_thought/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/math_thought/</guid>
      <description>数学思想  先声明一下！我是数学菜鸡！以下内容是我个人总结在学习数学中的一些重要的数学思想，写的不好！望海涵！!!
 1. 无中生一 这个是我最先总结出来的了， 所谓无中生一就是我们在做题目时常常会遇到一些写着写着就没办法写下去的题目，也不是写错了，但就是卡在了这里想了半天也没有想出来可以用什么公式来解决问题！ 这个时候我们就需要重新审视一下题目了， 我们真的应该这样写吗？看例题
$$ 求 f(x)=ln( \sqrt{1+x^2} +x) 的奇偶性 $$
$$ f(-x) = ln(\sqrt{1+(-x)^2}-x) $$
$$ f(-x) = ln(\sqrt{1+x^2}-x) $$
$$ f(-x)=ln[(\sqrt{1+x^2}-x)*\frac{\sqrt{x^2+1}+x}{\sqrt{x^2+1}+x}] $$
$$ 因为后面的\frac{\sqrt{x^2+1}+x}{\sqrt{x^2+1}+x}为一,对整个结果没有影响可得 $$
$$ f(-x)=ln\frac {(\sqrt{x^2+1}+x)*(\sqrt{1+x^2}-x)} {\sqrt{x^2+1}+x} $$
$$ f(-x)=ln(\frac{1}{\sqrt{x^2+1}+x})=ln(\sqrt{x^2+1}+x)^{-1}=-ln(\sqrt{x^2+1}+x) $$
文章持续更新 ing❤️</description>
    </item>
    
    <item>
      <title>CentOS 7 磁盘扩容</title>
      <link>https://jokeme.top/p/disk_expansion/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/disk_expansion/</guid>
      <description>CentOS 7 磁盘扩容 假设已经添加了磁盘,到了需要在系统里操作的步骤
对新增加的硬盘进行分区 fidsk -l fdisk /dev/sda (根据实际情况选择) n	(新增加一个分区) p	(区类型选择为主分区) 回车	(分区号) 回车　（起始扇区） 回车　（结束扇区） t 上面的分区号 8e 将分区“Linux”的类型更改为“Linux LVM” w 保存 reboot 对新增加的硬盘格式化 mkfs.ext4 /dev/sda3 添加新LVM到已有的LVM组，实现扩容 lvm　进入lvm管理 lvm&amp;gt; pvcreate /dev/sda3 这是初始化刚才的分区，必须的 lvm&amp;gt;vgextend centos /dev/sda3 将初始化过的分区加入到虚拟卷组vg_dc01 lvm&amp;gt;lvextend -L +100G /dev/mapper/centos-root　扩展已有卷的容量（注意容量大小） lvm&amp;gt;pvdisplay　查看卷容量，这时你会看到一个很大的卷了 lvm&amp;gt;quit　以上只是卷扩容了，下面是文件系统的真正扩容，输入以下命令：
resize2fs /dev/mapper/centos-root resize2fs: Bad magic number in super-block 当尝试打开 /dev/mapper/centos-root 时
报错：当尝试打开 /dev/mapper/centos-root 时 找不到有效的文件系统超级块
因为我的centos7的某些分区用的是xfs的文件系统（使用df -T查看即可知道）
将resize2fs替换为xfs_growfs，重新执行一遍即可，如下：
xfs_growfs /dev/mapper/centos-root 步骤记录 [root@last ~]# fdisk /dev/sda Welcome to fdisk (util-linux 2.</description>
    </item>
    
    <item>
      <title>clang 学习笔记</title>
      <link>https://jokeme.top/p/clang_note/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/clang_note/</guid>
      <description>clang 学习笔记 1.什么是 c C 语言是一种通用的高级语言，最初是由丹尼斯·里奇在贝尔实验室为开发 UNIX 操作系统而设计的。C 语言最开始是于 1972 年在 DEC PDP-11 计算机上被首次实现。
在 1978 年，布莱恩·柯林汉（Brian Kernighan）和丹尼斯·里奇（Dennis Ritchie）制作了 C 的第一个公开可用的描述，现在被称为 K&amp;amp;R 标准。
UNIX 操作系统，C 编译器，和几乎所有的 UNIX 应用程序都是用 C 语言编写的。由于各种原因，C 语言现在已经成为一种广泛使用的专业语言。
 易于学习。 结构化语言。 它产生高效率的程序。 它可以处理底层的活动。 它可以在多种计算机平台上编译。  1.1 关于 C  C 语言是为了编写 UNIX 操作系统而被发明的。 C 语言是以 B 语言为基础的，B 语言大概是在 1970 年被引进的。 C 语言标准是于 1988 年由美国国家标准协会（ANSI，全称 American National Standard Institute）制定的。 截至 1973 年，UNIX 操作系统完全使用 C 语言编写。 目前，C 语言是最广泛使用的系统程序设计语言。 大多数先进的软件都是使用 C 语言实现的。 当今最流行的 Linux 操作系统和 RDBMS（Relational Database Management System：关系数据库管理系统） MySQL 都是使用 C 语言编写的。  1.</description>
    </item>
    
    <item>
      <title>笔记本坏了，这几天不能敲代码了</title>
      <link>https://jokeme.top/p/my_laptop_do_not_work/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/my_laptop_do_not_work/</guid>
      <description>笔记本坏了，这几天不能写代码了 &amp;lt;2020-07-27 14:25&amp;gt; 今天吃完饭以后，发现笔记本无法唤醒了。我还觉得是电池没有电了，可是插上电源依然不能开机，我慌了，八成是笔记本坏了。
笔记本坏了那也不能影响我写bug呀，我就找了个老的台式机装上了Ubuntu 18。
太难受了，换了一个 Ubuntu 系统的老电脑，卡的怀疑人生，还没有好的中文输入法，明天就去修电脑去，希望小米的授权维修店不会坑我吧
······························································
&amp;lt;2020-07-28 01:21&amp;gt;
好了，?早点洗洗睡觉了
······························································
&amp;lt;2020-07-28 17:56&amp;gt;
现在刚刚修完电脑回来，话说小米的售后还是可以的，只是客服有点坑，给我说要发票，要三包卡
结果我去了小米授权维修点，检查了一下电脑状况，主板出问题了，查了一下保修日期还有一天，也没有给我拖时间，当场发顺丰了，还说大概三天就可以维修好，我不是吹捧小米哈，我是 果粉 就觉得小米这个牌子也确实是还可以的。
等过几天看看返厂修的怎么样，不行我再喷，哈哈哈
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;
&amp;lt;2020-09-25 20:52&amp;gt;
忘记了写后续了，今天来补一下后续 ?
大概是 5 天后，我的笔记本被修好寄回，快递员大早上的给我打电话，那个时候我还在睡着觉，然后快递员打不通我的电话，就打我室友的。我室友叫我下去拿快递。妈的，我刚到楼下就看到这个狗屁快递员，直接把我的快递 ?从 2 米多高的铁门外丢进来了，然后当场潇洒离去，卧槽，我都看呆了，那个是我的电脑！没错吧？快递员敢这么随便的扔进来？?
然后我就拿快递回去拆开，检查了一下电脑 ?,好在小米那边泡沫纸裹的多，电脑没有啥事！那我就开个机吧！
然后就挺惨不忍睹的，换了主板以后，各种卡，开机以后至少还要卡个 30s 这样才能反应过来，一开始我就想凑合着用吧，反正不要钱的，还要啥自行车呢 ?‍♂️ . 但是我还是找了随电脑寄过来的专属售后吐槽，加了微信以后，我就说着各种我遇到的问题，一开始他还理我，后来直接鸟都不鸟我，心里一万个 mmp
大概是五天后吧，我他们电脑又坏了，莫名其妙的自己坏的，我发誓真的就是一顿饭的功夫&amp;hellip; &amp;hellip;就是这么突然！我又找我的专属客服哔哔！依旧是不理我，我也就自认倒霉了，打算发工资了重新换一下笔记本
然后又是两天后！我闲着无聊搁哪看我收到的垃圾短信，啊哈哈哈，无意间看到了小米给我发的售后服务评价，我就点进去链接，一顿妈卖批的骂，什么垃圾小米，什么垃圾售后，才几天又坏了，反正就是各种怼。
大概是一天以后，小米客服打电话给我了，和我大概了解了一下情况后，让我再次返厂，再给我维修一下(实际上是给我换了一块主板)
然后又是几天的折腾，电脑又给我修好啦，这次终于靠谱了，虽然也有一点卡顿，但是打完驱动，满血复活！New Bee ! 还给我报销了邮费
好了，今天算是完结了！
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;</description>
    </item>
    
  </channel>
</rss>
