<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>contains on JokemeBlog</title>
    <link>https://jokeme.top/tags/contains/</link>
    <description>Recent content in contains on JokemeBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jokeme.top/tags/contains/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java的equals和contains的一些区别</title>
      <link>https://jokeme.top/p/java_equals_and_contains/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jokeme.top/p/java_equals_and_contains/</guid>
      <description>equals() &amp;amp;&amp;amp; contains() Java 中常见的比较有equals和hashcode
今天在学习的时候就遇到了一个头疼的问题(菜鸟级的我有大大疑问)
在比较两个对象内的元素时，无论是使用equals还是hashcode都始终得不到我想要的结果。遂百度，记此文
那么这两种方法到底有什么区别呢？
equals()方法是根类 Object 的默认方法，查看 Object 中 equals()的默认实现：
public boolean equals(Object obj) { return (this == obj); } ✅ 可以看出没有重写过的 equals()方法和 == 是一样的，都是比较两个对象引用指向的内存地址是否一样判断两个对象是否相等。
也就是说，基本上每次都要Overwrite这个方法
hashCode是JDK根据对象的地址或者字符串或者数字计算该对象的哈希码值的方法。
hashcode 和 equals 两者必须同时重写。
注意在类中，有一些 equals 方法 OverWrite 时必须要传入 Object 类型
public boolean equals (person obj){ return (this == obj); }	❌ //这样写就是错误的,equals()方法不允许传入非 Object 类 </description>
    </item>
    
  </channel>
</rss>
