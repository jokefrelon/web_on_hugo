<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenWrt on JokemeBlog</title>
    <link>https://jokeme.top/categories/openwrt/</link>
    <description>Recent content in OpenWrt on JokemeBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2021 21:33:56 +0000</lastBuildDate><atom:link href="https://jokeme.top/categories/openwrt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Phicomm N1 刷 OpenWrt 做旁路由</title>
      <link>https://jokeme.top/p/phicomm_n1_openwrt/</link>
      <pubDate>Thu, 28 Jan 2021 21:33:56 +0000</pubDate>
      
      <guid>https://jokeme.top/p/phicomm_n1_openwrt/</guid>
      <description>众所周知啊！N1 这个产品呢比较的全能，可以刷armbian、Openwrt、Android 电视盒子甚至windows也都不在话下。
在去年也是以低价入手了一个盒子，但是一直就没有机会捯饬，因为我个人还有一个 x86 架构的低功耗小主机用于个人服务器使用，并且也是在 Docker 里面部署了一个 Openwrt 做旁路由来方便自己上墙，其实我个人是比较喜欢这种旁路由的方式的。因为连上局域网以后必须要手动指定网关才可以上墙，直接 DHCP 分配的用户没有任何影响，这样就不会对没有需求的用户产生影响。
这里说一下我的设备，我的 N1 买回来就是刷好的电视盒子系统，所以就没有降级的步骤了，但是降级工具包都包含在了 N1 工具包里面了可以自行百度如何降级，其实都非常简单，输入一个 IP 地址回车就可以了。
我个人是准备把 Openwrt 刷入自带的 emmc 里面的，这样可以省很多事，而且运行速度比在 U 盘里面有天然优势。
1.环境准备 斐讯 N1
适配 N1 的 OpenWrt 镜像
N1工具包（非必须）
U 盘一个（选好一点的 U 盘，可以上 USB3.0）
Etcher / rufus （写盘工具）
 在这里给大家推荐就几个 N1 的 Openwrt 镜像
GitHub：tuanqing的固件
GitHub：IvanSolis1989的固件
恩山大佬：flippy的固件
有一点需要注意，上面两个 GitHub 的固件都是没有无线网的，只有 flippy 的固件才有 WI-FI，自己看着选吧！
2.刻录镜像 从上面任意的一个镜像里选一个下载然后使用刻录工具来把镜像刻录进 U 盘里，这一步基本上不会出现什么问题。注意 U 盘里面的数据记得备份，写盘会把 U 盘里面的数据全部抹除。
3.引导 OpenWrt 启动 这一步需要先把 N1 启动连接好网线，插上刚刚刻录好的 U 盘，打开 N1 的 adb，然后可以去路由器管理界面查看 N1 盒子的 IP 地址，然后利用工具包里面的批处理脚本（N1 盒子进入刷机模式。bat）来引导 N1 从 Android 电视盒子重启到 Openwrt 中。基本上都是一键操作非常简单。</description>
    </item>
    
    <item>
      <title>记录一次OpenWrt安装zsh</title>
      <link>https://jokeme.top/p/openwrt_install_zsh/</link>
      <pubDate>Wed, 07 Oct 2020 21:33:56 +0000</pubDate>
      
      <guid>https://jokeme.top/p/openwrt_install_zsh/</guid>
      <description>众所周知啊，OpenWrt 是一个非常优秀的路由器 OS,但是因为是为路由器优化的，所以我们在使用的时候就会遇到各种各样的问题，就比如安装 ohmyzsh
因为网络问题，咱可以直接去GitHub看源码，顺便 Ctrl C / V
1.安装依赖 opkg update opkg install zsh git git-http ca-certificates curl sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot; #如果你Timeout了,不要慌!去Github下载源码,手动安装吧 ./install.sh 2.没了 开始造作啦！?
如果你内存空间不够安装 zsh,那你可以看看飞尘@IT草的文章,最小化安装zsh后,仅占用不到的1m空间</description>
    </item>
    
    <item>
      <title>Docker 中运行 OpenWrt</title>
      <link>https://jokeme.top/p/run_openwrt_in_docker/</link>
      <pubDate>Fri, 20 Mar 2020 21:33:56 +0000</pubDate>
      
      <guid>https://jokeme.top/p/run_openwrt_in_docker/</guid>
      <description>Docker 中运行 OpenWrt 前几天解决了小主机 Ubuntu 系统的引导问题以后。便开始折腾 OpenWrt 了，在 GitHub 上找到了 L 大 的 Lede 源码，需要自己编译。
关于如何编译我也不说了，L 大 在 Readme 里面说的清清楚楚的，没有难度，就是需要有耐心和良好的网络环境，编译过程会很慢(建议扶梯子，我没有用梯子，整整编译了两天才完成！? ? ?) 也可以用我编译好的 x86_64 的固件(集成有ssr,v2ray,adblock plus,samba,vsftpd等常用插件)
对于编译出来的文件我来介紹一下：
   openwrt-x86-64-rootfs-squashfs.img OpenWrt for Docker の img     openwrt-x86-64-combined-squashfs.vmdk 虚拟机文件，丢进 VMware 里面使用   openwrt-x86-64-combined-squashfs.img 我们编译的固件，刻录到 u 盘上来安装    我一开始也不知道这些镜像应该选哪一个刻录，然后爬各种论坛终于被我发现了这几个文件的用法了
好！环境已经没有问题，安装包也有了，那就先在 Docker 里面试试看这个 OpenWrt 怎么样吧
1 导入 OpenWrt 的镜像 cd ~/lede/bin/targets/x86/64 mkdir -p ~/opt mount -o loop openwrt-x86-64-rootfs-squashfs.</description>
    </item>
    
  </channel>
</rss>
